#version 130
//The fragment shader operates on each pixel in a given polygon

in vec2 fragmentPosition;
in vec4 fragmentColor;
in vec2 fragmentUV;

//This is the 3 component float vector that gets outputted to the screen
//for each pixel.
out vec4 color;

uniform float time;
uniform sampler2D mySampler;

float angle = atan(-fragmentPosition.y , fragmentPosition.x) * 0.1;
float len = length(fragmentPosition - vec2(0.0, 0.0));

void main() {

	vec4 textureColor = texture(mySampler, fragmentUV);

	color = textureColor * fragmentColor;
	//Swirl color below
	//color = vec4(fragmentColor.r * (sin(len * 40.0 + angle * 40.0 + time) / 2.0), 
	//			 fragmentColor.g * (cos(len * 40.0 + angle * 60.0 + time) / 2.0), 
	//			 fragmentColor.b * (sin(len * 40.0 + angle * 80.0 + time) / 2.0), fragmentColor.a) * textureColor;
}